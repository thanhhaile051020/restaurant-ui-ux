import Head from 'next/head'
import useClock from '../hooks/useClock'
import moment from 'moment'
import React, { useCallback, useEffect, useRef, useState } from 'react'
import Footer from '../container/Footer/Footer'
import Navbar from '../components/Navbar/Navbar'
import FindUs from '../container/Findus/FindUs'
import Gallery from '../container/Gallery/Gallery'
import Laurels from '../container/Laurels/Laurels'
import Intro from '../container/Intro/Intro'
import Chef from '../container/Chef/Chef'
import SpecialMenu from '../container/Menu/SpecialMenu'
import AboutUs from '../container/AboutUs/AboutUs'
import Headerr from '../container/Header/Header'
import { BsArrowRightShort } from 'react-icons/bs'
import {
  RiNumber1,
  RiNumber2,
  RiNumber3,
  RiNumber4,
  RiNumber5,
  RiNumber6,
} from 'react-icons/ri'
import { debounce } from 'lodash'
import { useRecoilState } from 'recoil'
import { containerState } from '../atoms/containerAtom'
import Scrollbar from 'react-smooth-scrollbar'
import SmoothScroll from '../components/SmoothScroll/SmoothScroll'
// import LocomotiveScroll from 'locomotive-scroll';
export default function Home() {
  const time = useClock()
  // console.log(moment(time.toString()), 'time')
  const introRef = useRef<any>()
  const [offset, setOffset] = useState<any>(0)
  const [hidePage, setHidePage] = useState(true)
  const [navbar, setNavbar] = useState(true)
  const [currentContainer, setCurrentContainer] = useState<string>('home')
  const [currentContainerAtom, setCurrentContainerAtom] =
    useRecoilState<string>(containerState)
  const debounceHide = useCallback(
    debounce((value) => setHidePage(value), 3000),
    []
  )
  const debounceGetCurrentContainer = useCallback(
    debounce((value) => {
      let currentContainer = getCurrentContainer(value)
      console.log('cur', currentContainer)
      setCurrentContainer(currentContainer)
      setCurrentContainerAtom(currentContainer)
    }, 500),
    []
  )

  const debounceNav = useCallback(
    debounce((value) => setNavbar(value), 0),
    []
  )

  const onScroll = (value: any) => {
    const { offset } = value
    console.log('alo', offset.y)
    debounceGetCurrentContainer(offset.y)
    // console.log("value",element.scrollHeight ,element.scrollTop,element.clientHeight)
    setHidePage(false)
    debounceHide(true)
    const page = document.getElementById('home')

    let currentScrollPos = page?.getBoundingClientRect().y
    setOffset(currentScrollPos)
    if (offset < currentScrollPos!) {
      debounceNav(true)
    } else {
      debounceNav(false)
    }
  }

  const getCurrentContainer = (value: number) => {
    let containers = ['home', 'about', 'menu', 'chef', 'intro', 'gallery']
    let currentHeight = 70

    for (let i = 0; i < containers.length; i++) {
      let cont = containers[i]
      let element: any = document.getElementById(cont)?.getBoundingClientRect()
      currentHeight += element.height
      if (value <= currentHeight) {
        return cont
      }
    }
    return containers[containers.length - 1]
  }

  useEffect(() => {
    if (currentContainer === 'intro' && introRef.current) {
      introRef.current.playVideo()
    }
  }, [currentContainer])

  return (
    <div className="-bg--color-black">
      <Head>
        <title>Create Next App</title>
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main id="maincontainer " className="">
        <Scrollbar
          className="h-screen overflow-y-scroll scrollbar-hide "
          onScroll={onScroll}
        >
          <div className="relative">
            <Navbar navbar={navbar} />
            <Headerr />
            <AboutUs />
            <SpecialMenu />
            <Chef />
            <Intro ref={introRef} />
            <Laurels />
            <Gallery />
            <FindUs />
            <Footer />
            <div
              onMouseEnter={() => debounceHide(false)}
              onMouseLeave={() => debounceHide(true)}
              id="pagee"
              className={`flex-end fixed right-[calc(50%-65px)] top-[50%]
            z-[10] mb-[2rem] hidden 
          items-center justify-end space-x-2 -text--color-golden
          
           transition-[300ms] md:inline-flex`}
            >
              <a
                href="#home"
                className={`flex h-[15px] w-[15px] items-center  justify-center rounded-full 
              ${
                currentContainer === 'home'
                  ? '-bg--color-golden -text--color-black'
                  : '-bg--color-black -text--color-golden'
              } `}
              >
                {' '}
                <RiNumber1 className=" h-[10px] w-[10px]" />
              </a>

              <a
                href="#about"
                className={`flex h-[15px] w-[15px] items-center  justify-center rounded-full 
              ${
                currentContainer === 'about'
                  ? '-bg--color-golden -text--color-black'
                  : '-bg--color-black -text--color-golden'
              } `}
              >
                <RiNumber2 className=" h-[10px] w-[10px]" />
              </a>
              <a
                href="#menu"
                className={`flex h-[15px] w-[15px] items-center  justify-center rounded-full 
              ${
                currentContainer === 'menu'
                  ? '-bg--color-golden -text--color-black'
                  : '-bg--color-black -text--color-golden'
              } `}
              >
                {' '}
                <RiNumber3 className=" h-[10px] w-[10px]" />
              </a>
              <a
                href="#chef"
                className={`flex h-[15px] w-[15px] items-center  justify-center rounded-full 
              ${
                currentContainer === 'chef'
                  ? '-bg--color-golden -text--color-black'
                  : '-bg--color-black -text--color-golden'
              } `}
              >
                <RiNumber4 className=" h-[10px] w-[10px]" />
              </a>
              <a
                href="#intro"
                className={`flex h-[15px] w-[15px] items-center  justify-center rounded-full 
              ${
                currentContainer === 'intro'
                  ? '-bg--color-golden -text--color-black'
                  : '-bg--color-black -text--color-golden'
              } `}
              >
                {' '}
                <RiNumber5 className=" h-[10px] w-[10px]" />
              </a>
              <a
                href="#gallery"
                className={`flex h-[15px] w-[15px] items-center  justify-center rounded-full 
              ${
                currentContainer === 'gallery'
                  ? '-bg--color-golden -text--color-black'
                  : '-bg--color-black -text--color-golden'
              } `}
              >
                {' '}
                <RiNumber6 className=" h-[10px] w-[10px]  " />
              </a>
            </div>
            
          </div>
         
        </Scrollbar>
      </main>
    </div>
  )
}
